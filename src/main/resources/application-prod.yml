server:
  port: 5000
  servlet:
    encoding:
      charset: utf-8

spring:
  datasource:
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?allowPublicKeyRetrieval=true&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${rds.username}
    password: ${rds.password}
  servlet:
    multipart:
      max-file-size: 20MB

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${oauth.client.id}
            client-authentication-method: client_secret_post
            redirect-uri: https://dev-weplanplans.vercel.app/login/oauth2/code/kakao #배포
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - gender
              - age_range
              - account_email
logging:
  level:
    '[org.springframework.boot.web]': INFO

springdoc:
  api-docs:
    path: /api-docs
    groups:
      enabled: true
  packages-to-scan: org.tenten.tentenbe.domain
  swagger-ui:
    tags-sorter: alpha
    groups-order: asc
    syntax-highlight:
      activated: true
    try-it-out-enabled: false

open-api:
  url: ${OPEN_API_URL}
  key: ${OPEN_API_KEY}

jwt:
  secret: ${JWT_SECRET}

#s3
cloud:
  aws:
    credentials:
      access-key: ${aws.credentials.access.key}
      secret-key: ${aws.credentials.secret.key}
    s3:
      bucket: ${aws.s3.bucket}
    region:
      static: ap-northeast-2
    stack:
      auto: 'false'